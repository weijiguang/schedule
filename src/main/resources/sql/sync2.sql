---======================开始 入院登记数据同步任务SQL语句（正式版） 开始==========================================
--autor:wei
--time:2012-9-18
--对应字段：
--数据分割条件限定语句，从目标（ORACLE）数据库查找最后同步的病人信息记录语句。
SELECT CASE WHEN MAX(IP_TIME) IS NULL THEN '1970-01-01 00:00:00' ELSE MAX(IP_TIME) END AS IP_TIME FROM IP_REGISTER;
-- 与HIS数据库的病人信息表关联字段数据查询语句
--重命名成与目标数据库表字段名一致的查询语句
SELECT BLH AS IP_NO,BRXM AS NAME,LTRIM(RTRIM(BRZT)) AS IP_CASE,
REPLACE(CONVERT(NVARCHAR(10),CSRQ,120),'-','.') AS BIRTH,DWDH AS C_TEL,DWDZ AS CORP,GX AS RELATION,
HF AS MARRY,JG AS BIRTHAREA,KSBH AS IP_DEPT,LRY AS IP_OPER,LXDH AS CONT_TEL,LXRDZ AS CONT_ADDR,
LXRXM AS CONTACT,MJZD AS CL_EDIAG,MZ AS NATION,MZYS AS IP_DR,
REPLACE(CONVERT(NVARCHAR(10),RYRQ,120),'-','.') AS IP_DATE,
REPLACE(CONVERT(NVARCHAR(23),RYRQ,121),'-','.') AS IP_TIME,SFLB AS FEE_CODE,SFZH AS ID,XB AS SEX,
ZY AS JOB,ZZ AS ADDR,ZYCS AS IP_CNT,ZZDH AS TEL FROM ZY_BRZL WHERE RYRQ > CONVERT(DATETIME,:IP_TIME, 121);

--将尚未同步的病人信息数据，同步到目标（oracle）数据库。
--将尚未同步的病人信息数据，同步到目标（oracle）数据库(已经存在了的病人不插入)。
INSERT INTO PATIENTINFO(CARD_NO,PID,IP_NO,FEE_CODE,NAME,SEX,BIRTH,MARRY,JOB,NATION,BIRTHAREA,ID,ADDR,
CORP,C_TEL,TEL,CONTACT,RELATION,CONT_ADDR,CONT_TEL,REG_DATE,REG_TIME,REG_OPER,LOCK_FLAG) 
SELECT :IP_NO,:IP_NO,:IP_NO,:FEE_CODE,:NAME,:SEX,:BIRTH,:MARRY,:JOB,:NATION,:BIRTHAREA,
:ID,:ADDR,:CORP,:C_TEL,:TEL,:CONTACT,:RELATION,:CONT_ADDR,:CONT_TEL,:IP_DATE,:IP_TIME,:IP_OPER,'F' 
FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM PATIENTINFO WHERE PID = :IP_NO);

--将尚未同步的入院登记数据，同步到目标（oracle）数据库。
INSERT INTO IP_REGISTER(REG_NO,TYPE,PID,IP_NO,IP_CNT,FEE_CODE,NAME,SEX,BIRTH,MARRY,JOB,
NATION,BIRTHAREA,ID,ADDR,CORP,C_TEL,TEL,CONTACT,RELATION,CONT_ADDR,CONT_TEL,IP_DEPT,IP_DATE,
IP_TIME,IP_CASE,CL_EDIAG,CL_CDIAG,IP_OPER,LOC_FLAG,IP_DR) VALUES(TO_CHAR(SYSDATE,'YYYYMMDD')||SEQ_REG_NO.NEXTVAL,'1',
:IP_NO,:IP_NO,:IP_CNT,:FEE_CODE,:NAME,:SEX,:BIRTH,:MARRY,:JOB,:NATION,:BIRTHAREA,:ID,:ADDR,:CORP,
:C_TEL,:TEL,:CONTACT,:RELATION,:CONT_ADDR,:CONT_TEL,:IP_DEPT,:IP_DATE,:IP_TIME,:IP_CASE,:CL_EDIAG,:CL_EDIAG,:IP_OPER,'F',:IP_DR);

---======================结束 入院登记数据同步任务SQL语句（正式版） 结束==========================================
DROP SEQUENCE SQ_REG_NO;CREATE SEQUENCE SEQ_REG_NO INCREMENT BY 1 MINVALUE 1 NOCACHE ORDER;



BEGIN
    SYS.DBMS_SCHEDULER.CREATE_JOB (
            job_name => '"EMR"."RECREATE_SEQ_REG_NO"',
            job_type => 'PLSQL_BLOCK',
            job_action => 'CREATE SEQUENCE SEQ_REG_NO
 START WITH     1
 INCREMENT BY   1
 NOCACHE
 NOCYCLE;',
            number_of_arguments => 0,
            start_date => TO_TIMESTAMP_TZ('2012-09-21 07:12:57 Asia/Shanghai','YYYY-MM-DD HH24.MI.SS TZR'),
            repeat_interval => 'FREQ=YEARLY;BYHOUR=23',
            end_date => NULL,
            job_class => '"SYS"."DEFAULT_JOB_CLASS"',
            enabled => FALSE,
            auto_drop => FALSE,
            comments => '每日重建住院流水号序列');

    SYS.DBMS_SCHEDULER.SET_ATTRIBUTE( 
             name => '"EMR"."RECREATE_SEQ_REG_NO"', 
             attribute => 'restartable', value => TRUE);
    SYS.DBMS_SCHEDULER.SET_ATTRIBUTE( 
             name => '"EMR"."RECREATE_SEQ_REG_NO"', 
             attribute => 'logging_level', value => DBMS_SCHEDULER.LOGGING_OFF);
  
    SYS.DBMS_SCHEDULER.enable(
             name => '"EMR"."RECREATE_SEQ_REG_NO"');
END; 
/
